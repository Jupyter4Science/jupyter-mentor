# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/04_educator_course_overview.ipynb.

# %% auto 0
__all__ = ['EducatorCourseOverview']

# %% ../nbs/04_educator_course_overview.ipynb 1
from .file_viewer import FileViewer
import ipywidgets as widgets
from ipywidgets import VBox, HBox, HTML, Button, Label, Text, Textarea, Checkbox, Accordion, FileUpload
from IPython.display import display, clear_output
import ipyvuetify as v
from traitlets import observe

# %% ../nbs/04_educator_course_overview.ipynb 2
class EducatorCourseOverview(VBox):
    
    def __init__(self, file_viewer):
        super().__init__()

        # File Upload button
        self.file_upload = FileUpload(accept='', multiple=False)

        # global file viewer (that has model)
        self.file_viewer = file_viewer
        
        # Course overview text
        self.course_overview_text = v.TextField(label='Course Overview:', placeholder='Enter course overview')
        
        # AI Guidelines text
        self.ai_guidelines_label = Label('AI Guidelines:')
      
        
        # Binary features checkboxes
        self.step_by_step_checkbox = Checkbox(description='Step-by-Step')
        self.metaphor_checkbox = Checkbox(description='Metaphor')
        self.hints_checkbox = Checkbox(description='Hints')
        self.ai_guided_questions_checkbox = Checkbox(description='AI Guided Questions')
        
        
        # Open-ended response textbox
        self.open_ended_text = v.TextField(label='Open-ended Response:', placeholder='Enter open-ended query')

        # Next button
        self.next_button = Button(description='Next')

        #Header
        self.header = v.Container(children=[
            v.Html(
                tag='h1',
                attributes={'title': 'a title'},
                children=['Educator Course Overview']
            )
        ])

        
        # Arrange widgets vertically
        self.children = [
            self.header,  # Heading
            HBox([self.file_upload]),  # File upload button
            self.file_viewer,
            self.course_overview_text,  # Course overview
            self.ai_guidelines_label,   # AI Guidelines
            VBox([self.step_by_step_checkbox, self.metaphor_checkbox,
                  self.hints_checkbox, self.ai_guided_questions_checkbox]),  # Binary features checkboxes
            self.open_ended_text,  # Open-ended response
            HBox([self.next_button], layout={'justify_content': 'flex-end'}), 
        ]
