# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_file_viewer.ipynb.

# %% auto 0
__all__ = ['FileViewerView', 'FileModel', 'FileViewer']

# %% ../nbs/03_file_viewer.ipynb 1
import ipywidgets as widgets
from ipywidgets import VBox, HBox, HTML, Button, Label, Text, Checkbox, Accordion, FileUpload
from IPython.display import display, clear_output
import ipyvuetify as v
from traitlets import observe, HasTraits, Unicode
from ipyfilechooser import FileChooser

# %% ../nbs/03_file_viewer.ipynb 2
class FileViewerView(Accordion):
    
    def __init__(self):
        super().__init__()


        self.file_upload = widgets.FileUpload(
            accept='',  # Accepted file extension e.g. '.txt', '.pdf', 'image/*', 'image/*,.pdf'
            multiple=False  # True to accept multiple files upload else False
        )
        self.file_browser = FileChooser()
        self.file_browser.sandbox_path = '.'
        self.file_browser.filter_pattern = ['*.pdf', '*.md']
        self.file_browser.title = '<b>File Selector</b>' # Change the title (use '' to hide)

        # TODO: file_download
        
        # File viewer (hidden in accordion)
        self.selected_index = None  # Hide the accordion content initially
        self.titles = ('Course Files',) # this isn't working for some reason
        
        self.vbox = VBox()
        self.vbox.children = (self.file_upload, self.file_browser)  # File viewer (hidden initially)

        self.children = (self.vbox, )

# %% ../nbs/03_file_viewer.ipynb 8
class FileModel(HasTraits):
    # Define a Unicode string trait
    select = Unicode()

    def save_content_from_upload(values):
        for value in values:
            with open(value['name'], "wb") as fp:
                fp.write(value['content'])

# %% ../nbs/03_file_viewer.ipynb 10
class FileViewer(FileViewerView):
    
    def __init__(self, model):
        super().__init__()
        self.model = model
        self.file_browser.register_callback(self.observe_file_select)
        
    def observe_file_select(self, file_browser):
        # update download button with correct filepath
        # filepath stored in self.file_browser.selected
        pass
